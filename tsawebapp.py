# -*- coding: utf-8 -*-
"""Web_App.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/11ZOmfCqtUQRuRT6sXblYXrlPooAj_OQt
"""
print("Importing modules...")
import streamlit as st
import emoji
import pandas as pd
import re,string
import pickle
import nltk
from nltk.stem import WordNetLemmatizer
import sqlite3 
print("Importing completed...")
wnl = WordNetLemmatizer()
nltk.download('wordnet')
nltk.download('omw-1.4')

conn = sqlite3.connect('data.db')
c = conn.cursor()

def create_table():
	c.execute('CREATE TABLE IF NOT EXISTS tweetTable(username TEXT,password TEXT)')


def add_data(tweet,sentiment):
	c.execute('INSERT INTO tweetTable(username,password) VALUES (?,?)',(tweet,sentiment))
	conn.commit()
    
def view_all_tweets():
	c.execute('SELECT * FROM tweetTable')
	data = c.fetchall()
	return data
    

def data_preprocesing(tweet):
  
  # remove the punctuation mark
  tweet = re.sub(r"\@\w+|\#\w+|\.\w+|\?\w+|\!\w+|\,\w+|\;\w+|\'\w+|\'","",tweet)

  # remove the www,http or http
  tweet = re.sub(r"www\S+|http\S+|https\S+","",tweet) 
  
  # convert the text to lower case
  tweet = tweet.lower()

  tokens = []

  for token in tweet.split():
    tokens.append(wnl.lemmatize(token,pos="v"))
  tweet =  " ".join(tokens)
  
    
  return "".join(tweet)



def de_emoji(tweet):
  tweet = emoji.demojize(tweet)
  tweet = tweet.replace(":"," ")
  return ' '.join(tweet.split())
  
  
new_vectorizer = pickle.load(open("./new_nlpcountvectorizer.pkl","rb"))
new_model = pickle.load(open("./new_nbcountmodel.pkl","rb"))
  
def new_predict_sentiment(tweet):
  tweet = data_preprocesing(tweet)
  tweet = de_emoji(tweet)
  tweet = new_vectorizer.transform([tweet])
  y_pred = new_model.predict(tweet)
  return y_pred[0]


print("Streamlit is on...")
st.title('Tweeter Sentiment Analysis')
st.sidebar.header('Project by :')
st.sidebar.text('1. Yash Dattatraya Pawar')
st.sidebar.text('2. Piyush Vijay Misar')
if st.sidebar.button("View Tweets"):
    Tweet_result = view_all_tweets()
    clean_db = pd.DataFrame(Tweet_result,columns=["Tweet","Sentiment"])
    st.sidebar.dataframe(clean_db)
    

tweet = st.text_input('Enter the Tweet',max_chars=280)
create_table()

if st.button("Enter"):
    sentiment = new_predict_sentiment(tweet)
    if sentiment == 1:
      st.write('Tweet is Positive ðŸ˜ƒ')
      sentiment = "Positive"
    elif sentiment == 0:
      st.write('Tweet is Negative ðŸ˜¥')
      sentiment = "Negative"
    add_data(tweet,sentiment)